import asyncio
import os

from dateutil.relativedelta import relativedelta
from django.conf import settings
from django.core.management.base import BaseCommand
from django.utils import timezone
from telegram import Bot

from bot.models import Season


class Command(BaseCommand):
    help = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–∑–æ–Ω–∞–º–∏: —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ"

    def handle(self, *args, **kwargs):
        now = timezone.now().date()

        active_seasons = Season.objects.filter(is_active=True,
                                               end_date__lte=now)
        for season in active_seasons:
            season.is_active = False
            season.save()
            self.stdout.write(f"–ó–∞–≤–µ—Ä—à–µ–Ω —Å–µ–∑–æ–Ω: {season.name}")

            asyncio.run(self.send_season_end_message(season))

        if not Season.objects.filter(is_active=True).exists():
            new_season = self.create_new_season(now)
            self.stdout.write(f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Å–µ–∑–æ–Ω: {new_season.name}")
            asyncio.run(self.send_new_season_message(new_season))

    def create_new_season(self, now):
        """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —Å–µ–∑–æ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞"""
        month_to_theme = {
            1: ("winter", "–õ–µ–¥—è–Ω–æ–µ —Ü–∞—Ä—Å—Ç–≤–æ –∞–¥–º–∏–Ω–æ–≤"),
            2: ("winter", "–ú–æ—Ä–æ–∑–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞"),
            3: ("spring", "–í–µ—Å–µ–Ω–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"),
            4: ("spring", "–¶–≤–µ—Ç—É—â–∏–µ –ø–∞—Ç—á–∏"),
            5: ("spring", "–ú–∞–π—Å–∫–∏–µ –±–∞–≥—Ñ–∏–∫—Å—ã"),
            6: ("summer", "–õ–µ—Ç–Ω–∏–π –∞–ø–¥–µ–π—Ç"),
            7: ("summer", "–ü–ª—è–∂–Ω—ã–µ –±–µ–∫–∞–ø—ã"),
            8: ("summer", "–°–æ–ª–Ω–µ—á–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞"),
            9: ("autumn", "–û—Å–µ–Ω–Ω–∏–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥"),
            10: ("autumn", "–õ–∏—Å—Ç–æ–ø–∞–¥ —Ñ–∏—á"),
            11: ("autumn", "–¢—É–º–∞–Ω–Ω—ã–µ –¥–µ–ø–ª–æ–∏"),
            12: ("winter", "–ù–æ–≤–æ–≥–æ–¥–Ω–∏–µ —Å–±–æ–∏"),
        }

        theme, name = month_to_theme.get(now.month, ("winter", "–ù–æ–≤—ã–π —Å–µ–∑–æ–Ω"))

        return Season.objects.create(
            name=f"{name} {now.year}",
            theme=theme,
            start_date=now
        )

    async def send_season_end_message(self, season):
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–µ–∑–æ–Ω–∞"""
        try:
            bot = Bot(token=settings.TELEGRAM_BOT_TOKEN)
            group_chat_id = os.getenv("TELEGRAM_GROUP_CHAT_ID")
            if group_chat_id:
                await bot.send_message(
                    chat_id=group_chat_id,
                    text=(
                        f"üèÅ *–°–µ–∑–æ–Ω {season.name} –∑–∞–≤–µ—Ä—à–µ–Ω!*\n\n"
                        "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤! –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–µ–∑–æ–Ω–∞ "
                        "–±—É–¥—É—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n"
                        "–û–∂–∏–¥–∞–π—Ç–µ –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–≥–æ —Å–µ–∑–æ–Ω–∞!"
                    ),
                    parse_mode="Markdown"
                )
        except Exception as e:
            self.stdout.write(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    async def send_new_season_message(self, season):
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –Ω–æ–≤–æ–≥–æ —Å–µ–∑–æ–Ω–∞"""
        try:
            bot = Bot(token=settings.TELEGRAM_BOT_TOKEN)
            group_chat_id = os.getenv("TELEGRAM_GROUP_CHAT_ID")
            if group_chat_id:
                await bot.send_message(
                    chat_id=group_chat_id,
                    text=(
                        f"üéâ *–ù–∞—á–∞–ª—Å—è –Ω–æ–≤—ã–π —Å–µ–∑–æ–Ω!* üéâ\n\n"
                        f"*{season.name}*\n"
                        f"–ü–µ—Ä–∏–æ–¥: *{season.start_date.strftime("%d.%m.%Y")} -"
                        f" {season.end_date.strftime("%d.%m.%Y")}*\n\n"
                        "–í—Å–µ —É—Ä–æ–≤–Ω–∏ –∏ –æ–ø—ã—Ç —Å–±—Ä–æ—à–µ–Ω—ã. –£–¥–∞—á–∏ –≤ –Ω–æ–≤–æ–º —Å–µ–∑–æ–Ω–µ!\n"
                        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–∞–Ω–¥–æ–π /profile"
                    ),
                    parse_mode="Markdown"
                )
        except Exception as e:
            self.stdout.write(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
