import random

from asgiref.sync import sync_to_async
from django.utils import timezone

from bot.models import (
    Achievement,
    DailyStatistics,
    Quote,
    Season,
)


async def get_random_quote():
    active_quotes = await sync_to_async(list)(
        Quote.objects.filter(is_active=True))
    if not active_quotes:
        return "¬´–ò–Ω–æ–≥–¥–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤—ã–±–æ—Ä–∞ ‚Äî –ª—É—á—à–∏–π –≤—ã–±–æ—Ä...¬ª\n‚Äî –ê–ª–∏—Å–∞"
    quote = random.choice(active_quotes)
    return f"¬´{quote.text}¬ª\n‚Äî {quote.source} | {quote.author}"


async def get_daily_statistics():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –¥–≤—É–º—è –∫–ª—é—á–∞–º–∏: total_trips –∏ total_time.
    total_trips - —ç—Ç–æ —Å—É–º–º–∞ –≤—Å–µ—Ö –ø–æ–µ–∑–¥–æ–∫, —Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å,
    –∞ total_time - —ç—Ç–æ —Å—É–º–º–∞ –≤—Å–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏,
    –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å.

    : –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –°–ª–æ–≤–∞—Ä—å, –∫–∞–∫ –æ–ø–∏—Å–∞–Ω–æ –≤—ã—à–µ
    """
    stats = await get_daily_statistics()
    header = "üìä *–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:*"
    quote = await get_random_quote()
    today = timezone.now().date()

    season_info = ""
    try:
        season = await sync_to_async(Season.objects.get)(is_active=True)
        season_info = f"üèÜ *–¢–µ–∫—É—â–∏–π —Å–µ–∑–æ–Ω: {season.name}*\n"
        now = timezone.now().date()
        days_left = (season.end_date - now).days
        season_info += f"‚è≥ –î–æ –∫–æ–Ω—Ü–∞ —Å–µ–∑–æ–Ω–∞: *{days_left} –¥–Ω–µ–π*\n\n"
    except Season.DoesNotExist:
        season_info = "‚ÑπÔ∏è *–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–µ–∑–æ–Ω –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω*\n\n"

    user_stats = await sync_to_async(list)(
        DailyStatistics.objects.filter(date=today)
        .values("username", "total_trips", "total_time")
        .order_by("-total_trips")
    )

    achievements = await sync_to_async(list)(
        Achievement.objects.filter(achieved_at__date=today)
        .values("username", "achievement_name")
    )

    achievements_text = "\n\nüèÜ *–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n"

    for user in user_stats[:5]:
        if user["total_trips"] > 0:
            avg_time = user["total_time"].total_seconds() / user["total_trips"]
            avg_min = int(avg_time // 60)
            avg_sec = int(avg_time % 60)
        else:
            avg_min = avg_sec = 0

        user_achs = [
            a["achievement_name"] for a in achievements
            if a["username"] == user["username"]]
        unique_achs = list(set(user_achs))[:3]

        achievements_text += (
            f"üë§ @{user['username']}\n"
            f"   ‚ñ∏ –í—ã–µ–∑–¥–æ–≤: {user['total_trips']} üöó\n"
        )

        if user["total_trips"] > 0:
            achievements_text += (f"   ‚ñ∏ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: {avg_min} –º–∏–Ω"
                                  f" {avg_sec} —Å–µ–∫ ‚è±\n")

        if unique_achs:
            achievements_text += f"   ‚ñ∏ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è: {', '.join(unique_achs)}\n"

        achievements_text += "\n"

    if not user_stats:
        achievements_text = "\n\nüèÜ *–°–µ–≥–æ–¥–Ω—è –µ—â—ë –Ω–∏–∫—Ç–æ –Ω–µ –æ—Ç–º–µ—Ç–∏–ª—Å—è*"

    if stats["total_trips"] == 0:
        return (
            f"{season_info}"
            f"{header}\n"
            f"üìå *–¢–µ–∫—É—â–∞—è —Å–∏—Ç—É–∞—Ü–∏—è:*\n"
            f"   –û–≥–æ, —Å–µ–≥–æ–¥–Ω—è –µ—â—ë –Ω–∏ –æ–¥–Ω–æ–≥–æ –≤—ã–µ–∑–¥–∞! ‚òòÔ∏è\n"
            f"{achievements_text}"
            f"\n‚ú® *–ê –≤–æ—Ç –∏ –æ–±–µ—â–∞–Ω–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞:*\n{quote}"
        )

    total_time = stats["total_time"]
    hours = int(total_time.total_seconds() // 3600)
    minutes = int((total_time.total_seconds() % 3600) // 60)
    avg_minutes = int(total_time.total_seconds() // stats["total_trips"] // 60)
    time_format = f"{hours} —á" + (f" {minutes} –º–∏–Ω" if minutes else "")

    return (
        f"{season_info}"
        f"{header}\n"
        f"  - –í—Å–µ–≥–æ –≤—ã–µ–∑–¥–æ–≤: {stats['total_trips']} üöó\n"
        f"  - –û–±—â–µ–µ –≤—Ä–µ–º—è: {time_format} ‚è±\n"
        f"  - –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: {avg_minutes} –º–∏–Ω üìå"
        f"{achievements_text}"
        f"\n\n{quote}"
    )
