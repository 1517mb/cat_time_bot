from asgiref.sync import sync_to_async
from django.db.models import DurationField, Sum
from django.utils import timezone

from bot.models import DailyStatistics


async def get_daily_statistics():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –¥–≤—É–º—è –∫–ª—é—á–∞–º–∏: total_trips –∏ total_time.
    total_trips - —ç—Ç–æ —Å—É–º–º–∞ –≤—Å–µ—Ö –ø–æ–µ–∑–¥–æ–∫, —Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å,
    –∞ total_time - —ç—Ç–æ —Å—É–º–º–∞ –≤—Å–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏,
    –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å.

    : –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç: –°–ª–æ–≤–∞—Ä—å, –∫–∞–∫ –æ–ø–∏—Å–∞–Ω–æ –≤—ã—à–µ
    """
    today = timezone.now().date()

    stats = await sync_to_async(
        DailyStatistics.objects.filter(date=today).aggregate)(
        total_trips=Sum("total_trips"),
        total_time=Sum("total_time", output_field=DurationField())
    )

    return stats


async def get_daily_statistics_message():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å.
    –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç.

    : –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç: —Å—Ç—Ä–æ–∫—É, –æ–ø–∏—Å–∞–Ω–Ω—É—é –≤—ã—à–µ
    """
    stats = await get_daily_statistics()

    if not stats["total_trips"]:
        message = "üìä *–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:*\n–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö."
    else:
        total_trips = stats["total_trips"]
        total_time = stats["total_time"]

        total_hours = total_time.total_seconds() // 3600
        total_minutes = (total_time.total_seconds() % 3600) // 60

        message = (
            f"üìä *–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:*\n"
            f"  - –í—Å–µ–≥–æ –≤—ã–µ–∑–¥–æ–≤: {total_trips}\n"
            f"  - –û–±—â–µ–µ –≤—Ä–µ–º—è: {int(total_hours)} —á {int(total_minutes)} –º–∏–Ω\n"
        )

    return message
